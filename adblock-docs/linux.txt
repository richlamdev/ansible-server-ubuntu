###################################################################
# unbound-adblock 0.5 SystemD/Linux Installation Instructions 
# Copyright 2018-2021 Jordan Geoghegan <jordan@geoghegan.ca>
###################################################################

###################################################################
# Table of Contents:
###################################################################

* Unbound Configuration Notes

* Upgrade Instructions (upgrade from 0.4)

* Fresh Install Instructions

* Post Install Notes


###################################################################
# Notes:
###################################################################

1) This guide should work for almost any SystemD based distro
   It is known to work on Debian and and Ubuntu 20.10

2) By default, unbound-adblock expects Korn Shell (ksh) to be
   present (due to its BSD heritage) but it is also compatible
   with bash, as is commonly found on Linux. You'll need to
   adjust the scripts shebang line after installing, like so:
	# sed -i '1 s/ksh/bash/' /usr/local/bin/unbound-adblock
   ---
   See release notes for a full list of compatible shells

2) If something doesn't work, then the script can be easily tweaked
   to make it work. The variables set based on OS declaration can be 
   very easily modified to accomodate nearly any OS/setup (see man page)

3) This guide assumes you know how to setup Unbound. If not,
   there are plenty of online guides to setting up Unbound.

Linux Unbound Quick Start:

	-- Install unbound
	# apt/yum install unbound

	-- Fetch and install example unbound config:
	$ wget https://www.geoghegan.ca/pub/unbound-adblock/0.5/unbound.conf.example
	# install -m 644 -o root unbound.conf.example /etc/unbound/unbound.conf

	-- Configure and enable 'unbound-control':
	# unbound-control-setup

	-- Modify unbound.conf to suit your needs:
	# vi /etc/unbound/unbound.conf

	-- Enable and Start
	# systemctl enable unbound
	# systemctl start unbound


###################################################################
# Upgrade from unbound-adblock 0.4 
###################################################################

1) Download updated script:
	$ wget https://geoghegan.ca/pub/unbound-adblock/0.5/unbound-adblock.sh

2) Install script with appropriate permissions and remove old install location:
	# install -m 755 -o root -g bin unbound-adblock.sh /usr/local/bin/unbound-adblock
	# sed -i -e 's/'ksh'/'bash'/g' -e '1 s/ksh/bash/' /usr/local/bin/unbound-adblock
	# rm /usr/local/bin/unbound-adblock.sh

3) Update _adblock users home folder:
   Previous unbound-adblock releases incorrectly set the users home folder
	# usermod -d /var/empty _adblock

4) Update adblock file locations:
   unbound-adblock now uses the standard RPZ blocklist format
	# install -m 644 -o _adblock -g wheel /dev/null /etc/unbound/adblock.rpz
	# rm /etc/unbound/adblock.conf

5) Update sudo permissions:
   Note: you may need to adjust specified path to 'unbound-control'
	# visudo
	...
	_adblock    ALL=(root) NOPASSWD: /usr/sbin/unbound-control -q status
	_adblock    ALL=(root) NOPASSWD: /usr/sbin/unbound-control -q flush_zone unbound-adblock
	_adblock    ALL=(root) NOPASSWD: /usr/sbin/unbound-control -q auth_zone_reload unbound-adblock
	# Only needed if using old unbound specific 'local-data' backend with '-o unbound'
	#_adblock    ALL=(root) NOPASSWD: /bin/systemctl restart unbound
	...

6) Configure unbound-control if it isn't already:
	# unbound-control-setup

7) Update unbound.conf to remove reference to old 'adblock.conf' file and add newly required RPZ syntax:
   (Also add 'unbound-control' bits to your config if it's not there already)

	# cat /var/unbound/etc/adblock.conf
	...
	# Required modules for RPZ
	module-config: "respip validator iterator"
	rpz:
	   name: "unbound-adblock"
	   zonefile: "/var/unbound/db/adblock.rpz"
	   rpz-log: yes
	   rpz-log-name: "unbound-adblock"

	remote-control:
	    control-enable: yes
	    control-interface: 127.0.0.1
	...
  
   Note: unbound will need to be restarted for the changes to take effect.

8) Create unbound-adblock log directory:
	# install -d -o root -g wheel -m 755 /var/log/unbound-adblock
	# install -o _adblock -g wheel -m 640 /dev/null /var/log/unbound-adblock/unbound-adblock.log
	# install -o _adblock -g wheel -m 640 /dev/null /var/log/unbound-adblock/unbound-adblock.log.0.gz

9) Update cron job (See note about cron in the 'Post Install Notes'):
	# crontab -u _adblock -e
	...
	@daily	sleep $(echo $((RANDOM\%7200+1))) ; unbound-adblock -O linux
	...

Please read the man page for information on how to configure unbound-adblock.
The manpage can be found here: https://www.geoghegan.ca/pub/unbound-adblock/0.5/man/man.txt

To receive notification of new unbound-adblock releases and updates please send an email
to 'announce@geoghegan.ca' with a subject line and body of "subscribe unbound-adblock"


###################################################################
# Fresh Installation Guide 
###################################################################

1) Install and configure Unbound as a local recursive DNS server
   An example unbound.conf can be found here:
	https://www.geoghegan.ca/pub/unbound-adblock/0.5/unbound.conf.example

2) Download script:
	$ wget https://geoghegan.ca/pub/unbound-adblock/0.5/unbound-adblock.sh

3) Create a new user (we'll call ours "_adblock"):
   The user should be created with a default shell of "nologin", home folder
   set to /var/empty/ with no password specified (disables password logins)
	# useradd -s /sbin/nologin -d /var/empty _adblock

4) Install script with appropriate permissions and adjust shell to bash:
	# install -m 755 -o root -g bin unbound-adblock.sh /usr/local/bin/unbound-adblock
	# sed -i -e 's/'ksh'/'bash'/g' -e '1 s/ksh/bash/' /usr/local/bin/unbound-adblock

5) Create required files:
   NOTE: Many distros (especially those based on Debian) don't have a wheel group.
         For such systems, exclude the '-g wheel' part in the following commands:
	...
	# install -m 644 -o _adblock /dev/null /etc/unbound/adblock.rpz
	# install -d -o root -g wheel -m 755 /var/log/unbound-adblock
	# install -o _adblock -g wheel -m 640 /dev/null /var/log/unbound-adblock/unbound-adblock.log
	# install -o _adblock -g wheel -m 640 /dev/null /var/log/unbound-adblock/unbound-adblock.log.0.gz

6) Give user '_adblock' strict sudo permission for the exact command the
   script needs run as superuser: Note: you may need to adjust specified path to 'unbound-control'
	# visudo
	...
	_adblock    ALL=(root) NOPASSWD: /usr/sbin/unbound-control -q status
	_adblock    ALL=(root) NOPASSWD: /usr/sbin/unbound-control -q flush_zone unbound-adblock
	_adblock    ALL=(root) NOPASSWD: /usr/sbin/unbound-control -q auth_zone_reload unbound-adblock
	...

7) Configure unbound-control if it isn't already:
	# unbound-control-setup

8) Add a few lines to your unbound.conf located BEFORE the forwarders section:
   (Also add 'unbound-control' bits to your config if it's not there already)
	...
	# Required modules for RPZ
	module-config: "respip validator iterator"
	rpz:
	   name: "unbound-adblock"
	   zonefile: "/etc/unbound/adblock.rpz"
	   rpz-log: yes
	   rpz-log-name: "unbound-adblock"

	remote-control:
	    control-enable: yes
	    control-interface: 127.0.0.1
	...

9) Restart unbound to reload configuration changes:
	# systemctl restart unbound

10) Run script manually to parse and load the adblock ruleset:
	# sudo -u _adblock unbound-adblock -O linux
	
11) Edit _adblock crontab to run unbound-adblock every night at midnight:
	# crontab -u _adblock -e
	...
	@daily	sleep $(echo $((RANDOM\%7200+1))) ; unbound-adblock -O linux
	...


Yay! unbound-adblock is now installed!

With the nightly cron job, the list will be regularly updated with
the latest known bad hosts.

Please read the man page for information on how to configure unbound-adblock.
The manpage can be found here: https://www.geoghegan.ca/pub/unbound-adblock/0.5/man/man.txt

To receive notification of new unbound-adblock releases and updates please send an email
to 'announce@geoghegan.ca' with a subject line and body of "subscribe unbound-adblock"


###################################################################
# Post Install Notes:
###################################################################

X) To add custom rules or enable features, or add alternate blocklists, 
   See the "User Configuration Area" located at the top of the script.
   This area serves as a built in config file, so please feel free to 
   edit it and experiment with all the features available within.
   ---
   Note: Most options can also be configured from the command line

X) Regarding Cron Jobs:
   Over the past year I've noticed a number of list host servers
   going down at midnight in populated timezones (ie West Coast,
   East Coast and Western Europe). To be respectful (and to avoid
   overloading list providers servers) we have cron jobs 
   scheduled to run at a random time within a defined interval.
   ---
   With the new default cron job, unbound-adblock will be run every 
   night at some point between midnight and 2AM, and thus 
   distributing the load of thousands of queries from numerous
   users over a 2 hour period rather than a matter of seconds.

X) If you would like to update the unbound-adblock blocklists at a more frequent
   interval you can use a modified cron job:
   ---
   It is essential that you make use of the crontab randomization feature to
   ensure use of unbound-adblock remains respecful of blocklist provider resources.
   ---
   The following example runs unbound-adblock every 3 to 4 hours at a random minute
   (this avoids flooding the server with traffic at exactly XX:00)
   ---
   Run unbound-adblock every 3 hours Example:
	(you can change '/3' to '/4' to run every 4 hours)

	# crontab -u _adblock -e
	...
	0 */3 * * *	sleep $(echo $((RANDOM\%3600+1))) ; unbound-adblock -O linux
	...

X) Google mandates the use of their DNS servers in many apps and services
   and many devices also use hardcoded Google DNS that cannot be changed.
   This is both a privacy and freedom concern. If you can, redirect all
   DNS traffic to the machine running Unbound. Example PF ruleset:
   (This rule should be run on your router/gateway)
	...
	table <gooDNS4> {8.8.8.8 8.8.4.4}
	table <gooDNS6> {2001:4860:4860::8888 2001:4860:4860::8844}
	pass in quick to <gooDNS4> rdr-to $adblock
	pass in quick to <gooDNS6> rdr-to $adblock6
	...

